
syntax = "proto3";

package book;

option go_package="github.com/josemqz/SistDistribuidos/Lab2/book;book";


message Chunk{
    string algoritmo = 1;
    string nombreLibro = 2;
    int32 numChunk = 3;
    bytes contenido = 5;
    string nombreArchivo = 6;
}

//para enviar direcciones de chunks a ClienteDownloader
message ChunksInfo{
    string nombreLibro = 1;
    int32 cantChunks = 2;
    string info = 3;
}

message ExMutua{
    string tiempo = 1; //timestamp
}

message ListaLibros{
    string lista = 1;
}

message PropuestaLibro{
    string nombreLibro = 1;
    string propuesta = 2;
    int32 cantChunks = 3;
    //si la propuesta considera usar datanode a, b y/o c
    bool datanodeA = 4;
    bool datanodeB = 5;
    bool datanodeC = 6;
}

message RespuestaP{
    bool respuesta = 1;
    string DNcaido = 2;
}

message ACK{
    string ok = 1;
}


service BookService{
    
//DataNode
    
    rpc RequestRA(ExMutua) returns (ACK) {}

    rpc EnviarChunkDN(Chunk) returns (Chunk) {}
    rpc RecibirChunksDN(Chunk) returns (ACK) {}

    rpc RecibirPropuesta(PropuestaLibro) returns (RespuestaP) {}

    rpc RecibirChunks(stream Chunk) returns (ACK) {}

//NameNode

    rpc escribirLogDes(PropuestaLibro) returns (ACK) {}

    rpc recibirPropDatanode(PropuestaLibro) returns (PropuestaLibro) {}

    rpc ChunkInfoLog(ChunksInfo) returns (ChunksInfo){}

    rpc EnviarListaLibros(ACK) returns (ListaLibros) {}


    //exclusi√≥n mutua

}